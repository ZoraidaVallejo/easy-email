
////
/// @group math
////


/// Returns a unitless value.
///
/// @name strip-units
///
/// @param {number} $number - Any value with units.
/// @return {number} - Unitless value.
///
@function strip-units($number) {
    @return $number / ($number * 0 + 1);
}


/// Checks if the given number is divisible by two.
///
/// @name even
///
/// @param {number} $number - Any number.
/// @return {boolean}
///
@function even($number) {
    @return ($number % 2 == 0);
}


/// Does a rule-of-three. That is, for a : b :: c : d, and given a, b and c, returns d.
///
/// @name rule-of-three
///
/// @param {number} $sourcefirst - `a`
/// @param {number} $sourcesecond - `b`
/// @param {number} $targetfirst - `c`
/// @return {number} - `d`
///
@function rule-of-three($sourcefirst, $sourcesecond, $targetfirst) {
    @return ($targetfirst * $sourcesecond) / $sourcefirst;
}


/// Returns how many elements fit in a given width.
///
/// @name how-many-fit
///
/// @param {number} $element-width - Element width.
/// @param {number} $element-gap - Gap between elements.
/// @param {number} $base-width - Width you want to compare with.
/// @return {number} - How many elements fit on the given width.
///
@function how-many-fit($element-width, $element-gap, $base-width) {
    @return floor(($base-width + $element-gap) / ($element-width + $element-gap));
}
